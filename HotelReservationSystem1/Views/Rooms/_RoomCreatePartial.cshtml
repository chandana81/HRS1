@model HotelReservationSystem1.ViewModels.RoomVM

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true)
        <div class="form-group">
            @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Number, new { @class = "form-control", autofocus = "autofocus", type = "number" })
                @Html.ValidationMessageFor(model => model.Number)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RoomTypeId, "Room Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RoomTypeId", null, "-- Select Room Type --", new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.RoomTypeId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Floor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Floor, new { @class = "form-control", type = "number" })
                @Html.ValidationMessageFor(model => model.Floor)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Rate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Rate, new { @class = "form-control", type = "number" })
                @Html.ValidationMessageFor(model => model.Rate)
            </div>
        </div>

        @if (User.IsInRole("Is_Save"))
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-primary" />
                    <input type="reset" value="Clear" class="btn btn-default" />
                </div>
            </div>
        }

    </div>
}
